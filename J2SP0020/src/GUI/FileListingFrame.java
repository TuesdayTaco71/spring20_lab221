package GUI;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author tanh2
 */
public class FileListingFrame extends javax.swing.JFrame implements DocumentListener
{

    private File path;
    DefaultListModel listModel = new DefaultListModel();

    /**
     * Creates new form FileListingFram
     */
    public FileListingFrame()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        txtPath = new javax.swing.JTextField();
        btnList = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listItem = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEdit = new javax.swing.JTextArea();
        lblName = new javax.swing.JLabel();
        lblSize = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Explorer");

        txtPath.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPath.getDocument().addDocumentListener(this);

        btnList.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnList.setForeground(new java.awt.Color(0, 102, 0));
        btnList.setText("List File");
        btnList.setEnabled(false);
        btnList.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnListActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(0, 102, 102));
        btnUpdate.setText("Update");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(153, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnDeleteActionPerformed(evt);
            }
        });

        listItem.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                listItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listItem);

        txtEdit.setColumns(20);
        txtEdit.setRows(5);
        jScrollPane2.setViewportView(txtEdit);

        lblName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblName.setText("File Name: ");

        lblSize.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblSize.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSize.setText("File Size:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPath)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnList, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSize, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(lblSize)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnList)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnListActionPerformed
    {//GEN-HEADEREND:event_btnListActionPerformed
        listModel.clear();
        path = new File(txtPath.getText());
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        System.out.println(path);
        if (path.exists())
        {
            File listFile[] = path.listFiles();
            for (File f : listFile)
                System.out.println(f.getName());
            for (File f : listFile)
                listModel.addElement(f.getName());
            listItem.setModel(listModel);
        } else
            JOptionPane.showMessageDialog(null, "> Path does not exist...");
    }//GEN-LAST:event_btnListActionPerformed

    private void listItemMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_listItemMouseClicked
    {//GEN-HEADEREND:event_listItemMouseClicked
        lblName.setText("File Name: " + listItem.getSelectedValue());
        lblSize.setText("File Size: UNKNOWN");
        btnDelete.setEnabled(true);
        if (listItem.getSelectedValue().endsWith(".txt"))
        {
            File tempFile = new File(path + "\\" + listItem.getSelectedValue());
            lblSize.setText("File Size: " + tempFile.length());
            btnUpdate.setEnabled(true);
            try
            {
                FileReader fReader = new FileReader(tempFile);
                BufferedReader bReader = new BufferedReader(fReader);
                txtEdit.read(bReader, null);
                bReader.close();
                txtEdit.requestFocus();
            } catch (FileNotFoundException ex)
            {
                Logger.getLogger(FileListingFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex)
            {
                Logger.getLogger(FileListingFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else
        {
            btnUpdate.setEnabled(false);
            JOptionPane.showMessageDialog(null, "> Can't open file or folder...");
            txtEdit.setText("");
        }
    }//GEN-LAST:event_listItemMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUpdateActionPerformed
    {//GEN-HEADEREND:event_btnUpdateActionPerformed
        try
        {
            File tempFile = new File(path + "\\" + listItem.getSelectedValue());
            FileWriter fWriter = new FileWriter(tempFile);
            BufferedWriter bw = new BufferedWriter(fWriter);
            bw.write(txtEdit.getText());
            bw.close();
            txtEdit.requestFocus();
            JOptionPane.showMessageDialog(null, "> Update Successfully...");
        } catch (IOException ex)
        {
            Logger.getLogger(FileListingFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnDeleteActionPerformed
    {//GEN-HEADEREND:event_btnDeleteActionPerformed
        File tempFile = new File(path + "\\" + listItem.getSelectedValue());
        tempFile.delete();
        listModel.remove(listItem.getSelectedIndex());
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(FileListingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(FileListingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(FileListingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(FileListingFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new FileListingFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSize;
    private javax.swing.JList<String> listItem;
    private javax.swing.JTextArea txtEdit;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables

    private void checkButton()
    {
        if (!txtPath.getText().isEmpty())
            btnList.setEnabled(true);
        else
            btnList.setEnabled(false);
    }

    @Override
    public void insertUpdate(DocumentEvent e)
    {
        checkButton();
    }

    @Override
    public void removeUpdate(DocumentEvent e)
    {
        checkButton();
    }

    @Override
    public void changedUpdate(DocumentEvent e)
    {
        checkButton();
    }
}
